// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Api.DeepSleep.Web.WebApiCheck.Clients.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class TimeSpan
    {
        /// <summary>
        /// Initializes a new instance of the TimeSpan class.
        /// </summary>
        public TimeSpan()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TimeSpan class.
        /// </summary>
        public TimeSpan(long? ticks = default(long?), int? days = default(int?), int? hours = default(int?), int? milliseconds = default(int?), int? minutes = default(int?), int? seconds = default(int?), double? totalDays = default(double?), double? totalHours = default(double?), double? totalMilliseconds = default(double?), double? totalMinutes = default(double?), double? totalSeconds = default(double?))
        {
            Ticks = ticks;
            Days = days;
            Hours = hours;
            Milliseconds = milliseconds;
            Minutes = minutes;
            Seconds = seconds;
            TotalDays = totalDays;
            TotalHours = totalHours;
            TotalMilliseconds = totalMilliseconds;
            TotalMinutes = totalMinutes;
            TotalSeconds = totalSeconds;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ticks")]
        public long? Ticks { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "days")]
        public int? Days { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hours")]
        public int? Hours { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "milliseconds")]
        public int? Milliseconds { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "minutes")]
        public int? Minutes { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seconds")]
        public int? Seconds { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "totalDays")]
        public double? TotalDays { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "totalHours")]
        public double? TotalHours { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "totalMilliseconds")]
        public double? TotalMilliseconds { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "totalMinutes")]
        public double? TotalMinutes { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "totalSeconds")]
        public double? TotalSeconds { get; private set; }

    }
}
